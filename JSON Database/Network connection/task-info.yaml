type: edu
files:
- name: src/client/Main.java
  visible: true
  text: |
    package client;

    public class Main {

        public static void main(String[] args) {
            System.out.println("Hello, world!");
        }
    }
  learner_created: false
- name: src/server/Main.java
  visible: true
  text: |
    package server;

    public class Main {

        public static void main(String[] args) {
            System.out.println("Hello, world!");
        }
    }
  learner_created: false
- name: test/JsonDatabaseTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.dynamic.DynamicTest;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;

    public class JsonDatabaseTest extends StageTest<String> {

        private static final String CORRECT_SERVER_OUTPUT =
            "Server started!\n" +
                "Received: Give me a record # N\n" +
                "Sent: A record # N was sent!";

        private static final String CORRECT_CLIENT_OUTPUT =
            "Client started!\n" +
                "Sent: Give me a record # N\n" +
                "Received: A record # N was sent!";

        @DynamicTest(order = 1)
        CheckResult test() {

            TestedProgram server = new TestedProgram("server");
            server.startInBackground();

            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            String serverOutput = server.getOutput().trim();

            if (!serverOutput.trim().equals("Server started!")) {
                return CheckResult.wrong("Server output should be 'Server started!' until a client connects!");
            }

            TestedProgram client = new TestedProgram("client");

            String clientOutput = client.start();
            serverOutput += "\n" + server.getOutput();

            String[] serverOutputLines = serverOutput.split("\n");

            if (serverOutputLines.length != 3) {
                return CheckResult.wrong("After the client connects to the server, the server output should contain 3 lines!");
            }

            String serverOutputLastLine = serverOutputLines[serverOutputLines.length - 1];

            if (!serverOutputLastLine.contains("Sent: A record #") || !serverOutputLastLine.contains("was sent!")) {
                return CheckResult.wrong("Server output after client connects to the server should be:\n"
                    + CORRECT_SERVER_OUTPUT + "\n\nWhere N is some number.\n\nYour output:\n" + serverOutput);
            }

            String[] clientOutputLines = clientOutput.split("\n");

            if (clientOutputLines.length != 3) {
                return CheckResult.wrong("After the client connects to the server, the client output should contain 3 lines!");
            }

            String clientOutputLastLine = clientOutputLines[clientOutputLines.length - 1];

            if (!clientOutputLastLine.contains("Received: A record #") || !clientOutputLastLine.contains("was sent!")) {
                return CheckResult.wrong("Client output after client connects to the server should be:\n"
                    + CORRECT_CLIENT_OUTPUT + "\n\nWhere N is some number.\n\nYour output:\n" + clientOutput);
            }

            return CheckResult.correct();
        }
    }
  learner_created: false
- name: src/server/JsonDatabase.java
  visible: true
  text: |
    package client;

    import java.util.ArrayList;
    import java.util.Objects;
    import java.util.Scanner;

    public class JsonDatabase {
        ArrayList<String> database;
        static final int MAX_SIZE = 100;

        public JsonDatabase() {
            database = new ArrayList<String>(MAX_SIZE);
            for (int i = 0; i < MAX_SIZE; i++) {
                database.add("");
            }
            menu();
        }

        void menu() {
            Scanner scanner = new Scanner(System.in);
            while (true)
                switch (scanner.next()) {
                    case "get":
                        get(scanner.nextInt());
                        break;
                    case "set":
                        int index = scanner.nextInt();
                        String value = scanner.nextLine();
                        value=value.substring(1,value.length());
                        set(index,value);
                        break;
                    case "delete":
                        delete(scanner.nextInt());
                        break;
                    case "exit":
                        return;
                }
        }

        void set(int index, String value) {
            database.set(index-1, value);
            System.out.println("OK");
        }

        void get(int index) {
            if (!Objects.equals(database.get(index-1), "") && database.get(index) != null) {
                System.out.println(database.get(index-1));
            } else {
                System.out.println("ERROR");
            }
        }

        void delete(int index) {
            if (index <= 0 || index >= 101) {
                System.out.println("ERROR");
            } else {
                database.set(index-1, "");
                System.out.println("OK");
            }
        }
    }
  learner_created: true
- name: src/server/Session.java
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/learn/step/5491#comment
status: Solved
feedback:
  message: Congratulations!
  time: Thu, 20 Jan 2022 18:34:36 UTC
record: 2
